#!/usr/bin/awk -f
#
# shep-group-howused: add a "howused" (or treatment) mapping column to the output of a
# Shepards breakdown generated by shep2csv and shep-separate-citetypes
#
# by Eric Nystrom, http://ericnystrom.org
#   started: March 27, 2017
#   version: March 27, 2017
#   license: MIT License
#
# USAGE:
#
#   shep-group-howused MAPFILE.tsv SPREADSHEET.tsv > OUTPUT.tsv
#
# Where MAPFILE.tsv is a TAB-delimited file with the
# shep2csv-generated abbreviation of Shepard's treatment in the first
# column and the "group" abbreviation in the second column (with the
# first line optionally a header); and SPREADSHEET.tsv is a
# TAB-delimited file, the output of (recent) shep2csv -->
# shep-separate-citetypes, with the "howused" information in Column 3.
# Output is to stdout, and is the contents of SPREADSHEET.tsv with an
# additional column at the end of each row containing the appropriate
# "group" abbreviation.

BEGIN {
    FS = "\t"
    OFS = "\t"
    
    # If no arguments, print usage
    if (ARGV[1] == "") {
	print " "
        print "Usage:"
        print "  shep-group-howused MAPFILE.tsv SPREADSHEET.tsv > OUTPUT.tsv"
        print " "
        exit 1
    }
}

## Process first file; i.e. MAPFILE.tsv
NR == FNR {
    ##  Load it into an array.  MAPFILE.tsv: howusedTABgroup
    treatmap[$1]=$2
}

## Process second file, SPREADSHEET.tsv
NR > FNR {
    ## First line: header
    if (FNR == 1) {
	print $0, "group"
	next
    }

    ## Check if each "howused" value exists as a key in our map,
    ## if it does, print line and add column; if not, print line with
    ## empty column and throw warning to STDERR
    if ($3 in treatmap) {
	print $0, treatmap[$3]
    } else {
	printf $0 OFS "\n"
	print "Error: ", $3, "not a recognized \"howused\" abbreviation" > "/dev/stderr"
    }
}

	    
