#!/usr/bin/awk -f
#
# shep-group: add a jurisdiction mapping column to the output of a
# Shepards breakdown generated by shep2csv
#
# by Eric Nystrom, http://ericnystrom.org
#   started: April 20, 2016
#   version: Sept. 24, 2016
#   license: MIT License
#
# USAGE:
#
#   shep-group MAPFILE.tsv SPREADSHEET.tsv > OUTPUT.tsv
#
# Where MAPFILE.tsv is a TAB-delimited file with the Shepard's
# jurisdiction header in the first column and the "group" abbreviation
# in the second column (with the first line optionally a header);
# and SPREADSHEET.tsv is a TAB-delimited file, the output of (recent) shep2csv,
# with the jurisdiction header in Column 6.  Output is to stdout, and
# is the contents of SPREADSHEET.tsv with an additional column at the
# end of each row containing the appropriate "group" abbreviation.

BEGIN {
    FS = "\t"
    OFS = "\t"
    
    # If no arguments, print usage
    if (ARGV[1] == "") {
	print " "
        print "Usage:"
        print "  shep-group MAPFILE.tsv SPREADSHEET.tsv > OUTPUT.tsv"
        print " "
        exit 1
    }
}

## Process first file; i.e. MAPFILE.tsv
NR == FNR {
    ##  Load it into an array.  MAPFILE.tsv: jurisdictionTABgroup
    jurismap[$1]=$2
}

## Process second file, SPREADSHEET.tsv
NR > FNR {
    ## First line: header
    if (FNR == 1) {
	print $0, "group"
	next
    }

    ## Check if each "jurisdiction" value exists as a key in our map,
    ## if it does, print line and add column; if not, print line with
    ## empty column and throw warning to STDERR
    if ($6 in jurismap) {
	print $0, jurismap[$6]
    } else {
	printf $0 OFS "\n"
	print "Error: ", $6, "not a recognized jurisdiction" > "/dev/stderr"
    }
}

	    
